import React from 'react';
import { useApiTester } from '../hooks/useApiTester';

const ApiTestPage: React.FC = () => {
  const { 
    testResults, 
    isRunning, 
    runAllTests, 
    testCreateOperations, 
    testTelegaPayWorkflow,
    clearResults 
  } = useApiTester();

  const getResultColor = (result: { success: boolean } | null) => {
    if (!result) return 'text-gray-500';
    return result.success ? 'text-green-600' : 'text-red-600';
  };

  const getResultIcon = (result: { success: boolean } | null) => {
    if (!result) return '‚è≥';
    return result.success ? '‚úÖ' : '‚ùå';
  };

  return (
    <div className="p-6 max-w-6xl mx-auto">
      <div className="mb-6">
        <h1 className="text-2xl font-bold text-gray-900 mb-2">API Tester</h1>
        <p className="text-gray-600">–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö API endpoints –∏–∑ Postman collection</p>
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
      <div className="flex flex-wrap gap-4 mb-8">
        <button
          onClick={runAllTests}
          disabled={isRunning}
          className="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50"
        >
          {isRunning ? '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...' : '–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã'}
        </button>
        
        <button
          onClick={testCreateOperations}
          disabled={isRunning}
          className="bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 disabled:opacity-50"
        >
          –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        </button>
        
        <button
          onClick={testTelegaPayWorkflow}
          disabled={isRunning}
          className="bg-purple-600 text-white px-4 py-2 rounded-md hover:bg-purple-700 disabled:opacity-50"
        >
          –¢–µ—Å—Ç TelegaPay
        </button>
        
        <button
          onClick={clearResults}
          disabled={isRunning}
          className="bg-gray-600 text-white px-4 py-2 rounded-md hover:bg-gray-700 disabled:opacity-50"
        >
          –û—á–∏—Å—Ç–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        </button>
      </div>

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ */}
      {Object.keys(testResults).length > 0 && (
        <div className="bg-white rounded-lg shadow">
          <div className="px-6 py-4 border-b border-gray-200">
            <h2 className="text-lg font-medium text-gray-900">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</h2>
            <p className="text-sm text-gray-500">
              –£—Å–ø–µ—à–Ω–æ: {Object.values(testResults).filter(r => r.success).length} / {Object.keys(testResults).length}
            </p>
          </div>
          
          <div className="p-6">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {Object.entries(testResults).map(([name, result]) => (
                <div key={name} className="border border-gray-200 rounded-lg p-4">
                  <div className="flex items-center justify-between mb-2">
                    <h3 className="font-medium text-gray-900">{name}</h3>
                    <span className="text-xl">{getResultIcon(result)}</span>
                  </div>
                  
                  <div className={`text-sm ${getResultColor(result)}`}>
                    {result.success ? '–£—Å–ø–µ—à–Ω–æ' : `–û—à–∏–±–∫–∞: ${result.error}`}
                  </div>
                  
                  {result.success && result.data && (
                    <details className="mt-2">
                      <summary className="text-xs text-gray-500 cursor-pointer">–ü–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ</summary>
                      <pre className="text-xs bg-gray-50 p-2 rounded mt-1 overflow-auto max-h-32">
                        {JSON.stringify(result.data, null, 2)}
                      </pre>
                    </details>
                  )}
                </div>
              ))}
            </div>
          </div>
        </div>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö endpoints */}
      <div className="mt-8 bg-white rounded-lg shadow">
        <div className="px-6 py-4 border-b border-gray-200">
          <h2 className="text-lg font-medium text-gray-900">–î–æ—Å—Ç—É–ø–Ω—ã–µ API Endpoints</h2>
        </div>
        
        <div className="p-6">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            <div>
              <h3 className="font-medium text-gray-900 mb-2">üîê Auth</h3>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>‚Ä¢ login</li>
                <li>‚Ä¢ register</li>
                <li>‚Ä¢ logout</li>
                <li>‚Ä¢ getProfile</li>
              </ul>
            </div>
            
            <div>
              <h3 className="font-medium text-gray-900 mb-2">ü§ñ Bots</h3>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>‚Ä¢ getBots</li>
                <li>‚Ä¢ createBot</li>
                <li>‚Ä¢ updateBot</li>
                <li>‚Ä¢ deleteBot</li>
                <li>‚Ä¢ getBotStats</li>
              </ul>
            </div>
            
            <div>
              <h3 className="font-medium text-gray-900 mb-2">üé´ Tickets</h3>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>‚Ä¢ getTickets</li>
                <li>‚Ä¢ createTicket</li>
                <li>‚Ä¢ updateTicket</li>
                <li>‚Ä¢ deleteTicket</li>
                <li>‚Ä¢ getTicketMessages</li>
                <li>‚Ä¢ addTicketMessage</li>
              </ul>
            </div>
            
            <div>
              <h3 className="font-medium text-gray-900 mb-2">üë• Referrals</h3>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>‚Ä¢ getReferrals</li>
                <li>‚Ä¢ getReferralLinks</li>
                <li>‚Ä¢ createReferralLink</li>
                <li>‚Ä¢ getReferralStats</li>
                <li>‚Ä¢ trackReferralClick</li>
              </ul>
            </div>
            
            <div>
              <h3 className="font-medium text-gray-900 mb-2">üéüÔ∏è Promo Codes</h3>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>‚Ä¢ getPromoCodes</li>
                <li>‚Ä¢ createPromoCode</li>
                <li>‚Ä¢ updatePromoCode</li>
                <li>‚Ä¢ deletePromoCode</li>
                <li>‚Ä¢ togglePromoCode</li>
                <li>‚Ä¢ validatePromoCode</li>
              </ul>
            </div>
            
            <div>
              <h3 className="font-medium text-gray-900 mb-2">üí≥ Billing</h3>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>‚Ä¢ getBillingPlans</li>
                <li>‚Ä¢ getSubscriptions</li>
                <li>‚Ä¢ getBillingStatus</li>
                <li>‚Ä¢ subscribeToPlan</li>
              </ul>
            </div>
            
            <div>
              <h3 className="font-medium text-gray-900 mb-2">üìá CRM</h3>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>‚Ä¢ getCRMConnections</li>
                <li>‚Ä¢ createCRMConnection</li>
                <li>‚Ä¢ updateCRMConnection</li>
                <li>‚Ä¢ deleteCRMConnection</li>
                <li>‚Ä¢ getCRMUserInfo</li>
              </ul>
            </div>
            
            <div>
              <h3 className="font-medium text-gray-900 mb-2">üí∞ TelegaPay</h3>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>‚Ä¢ getPaymentMethods</li>
                <li>‚Ä¢ createPaylink</li>
                <li>‚Ä¢ checkPaymentStatus</li>
                <li>‚Ä¢ confirmPayment</li>
                <li>‚Ä¢ cancelPayment</li>
                <li>‚Ä¢ createPayout</li>
              </ul>
            </div>
            
            <div>
              <h3 className="font-medium text-gray-900 mb-2">üë®‚Äçüíº Admin</h3>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>‚Ä¢ getClients</li>
                <li>‚Ä¢ createClient</li>
                <li>‚Ä¢ updateClient</li>
                <li>‚Ä¢ deleteClient</li>
                <li>‚Ä¢ getAdminStats</li>
                <li>‚Ä¢ getClientActivity</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ApiTestPage;